[gd_scene load_steps=15 format=2]

[ext_resource path="res://addons/selection_utils/selection_utils.gd" type="Script" id=1]

[sub_resource type="Environment" id=1]
background_mode = 1

[sub_resource type="World" id=2]
environment = SubResource( 1 )

[sub_resource type="Shader" id=3]
code = "shader_type spatial;
render_mode unshaded;

void fragment() {
	ALBEDO = COLOR.rgb;
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )

[sub_resource type="Environment" id=5]
background_mode = 1

[sub_resource type="World" id=6]
environment = SubResource( 5 )

[sub_resource type="Shader" id=10]
code = "shader_type spatial;
render_mode unshaded;

uniform sampler2D albedo : hint_albedo;

void fragment() {
	// todo: force linear
	ALBEDO = texture(albedo, UV).rgb;
}"

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 10 )

[sub_resource type="QuadMesh" id=9]

[sub_resource type="Shader" id=7]
code = "shader_type spatial;
render_mode unshaded, cull_disabled,depth_draw_opaque;

uniform float id;

void vertex() {
	VERTEX.xy = vec2(UV.x, 1.0 - UV.y);
	VERTEX.z = 0.0;
}

void fragment() {
	ALBEDO = abs(COLOR.r - id) < 0.0001 ? vec3(1) : vec3(0);
	ALPHA = abs(COLOR.r - id) < 0.0001 ? 1.0 : 0.0;
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/id = null

[sub_resource type="Shader" id=12]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	ALPHA = albedo.a * albedo_tex.a;
}
"

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 12 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )

[node name="SelectionUtils" type="Node"]
script = ExtResource( 1 )

[node name="SampleViewport" type="Viewport" parent="."]
own_world = true
world = SubResource( 2 )
keep_3d_linear = true
usage = 3
render_target_v_flip = true
render_target_clear_mode = 1
render_target_update_mode = 0
gui_disable_input = true

[node name="MeshInstance" type="MeshInstance" parent="SampleViewport"]
material_override = SubResource( 4 )

[node name="Camera" type="Camera" parent="SampleViewport"]
current = true

[node name="IsolateViewport" type="Viewport" parent="."]
own_world = true
world = SubResource( 6 )
keep_3d_linear = true
usage = 3
render_target_v_flip = true
render_target_clear_mode = 1
render_target_update_mode = 0
gui_disable_input = true

[node name="BaseTextureMesh" type="MeshInstance" parent="IsolateViewport"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0.5, -0.2 )
material_override = SubResource( 11 )
mesh = SubResource( 9 )
material/0 = null

[node name="MeshInstance" type="MeshInstance" parent="IsolateViewport"]
material_override = SubResource( 8 )

[node name="Camera" type="Camera" parent="IsolateViewport"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0.5, 2 )
projection = 1
current = true

[node name="MeshInstance" type="MeshInstance" parent="."]
material_override = SubResource( 13 )
